<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="trunk" default="build">

	<!-- Definitions of variables used during the rest of this script -->
	<property environment="env" />
	<property file="version.properties" />
	<property name="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
	<property file="application.properties" />

	<property name="lib.dir" value="${basedir}/lib"/>

	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>
	<!-- old variables -->
	<property name="build.dir" value="${basedir}/build" />
	<property name="assets.dir" value="${basedir}/etc" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="build.jar.dir" value="${build.dir}/jar" />
	<property name="src.dir" value="${basedir}/src" />
	

	<!-- Definitions of classpath variants used for different tasks -->

	<path id="compile.classpath">
		<!--Defining a classpath to lib folder for compilation -->
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="run.classpath">
		<!-- Defining a classpath to lib and build/classes folders for running -->
		<pathelement location="${build.classes.dir}" />
		<pathelement location="${basedir}" />
		<pathelement location="${assets.dir}" />
		<pathelement location="${lib.dir}" />
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>


	<!-- Definitions of runnable ant targets.
         Run them from the command line by executing "ant [targetname]"  -->
	<target name="run" description="Run the application" depends="build">
		<java classname="ee.ut.math.tvt.ryhm1.Intro" classpathref="run.classpath" fork="yes">
            <!-- Activating debugger -->
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>

	<target name="build" description="Build the system" depends="clean">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true" debuglevel="lines,vars,source" encoding="utf-8" compiler="modern" target="1.7" source="1.7" includeAntRuntime="false">
			<classpath refid="compile.classpath" />
		</javac>
	</target>

	<target name="dist" description="Build .jar file for distribution." depends="build, revision">
		<jar destfile="${build.jar.dir}/ryhm1.jar" basedir="${build.classes.dir}">
			<fileset dir="${basedir}" includes="*.properties" />
			<zipgroupfileset dir="${basedir}/lib" includes="*.jar" />
			<fileset dir="${assets.dir}" includes="*" />
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.ryhm1.Intro" />
				<attribute name="Class-Path" value="*.jar" />
				<attribute name="Implementation-Vendor" value="ryhm1" />
				<attribute name="Implementation-Title" value="IntroUI" />
				<attribute name="Implementation-Version" value="${build.number}" />
			</manifest>
		</jar>
	</target>

	<target name="revision" description="Increase the revision number and build number by 1 for every distribution">
		<propertyfile file="version.properties" comment="Version properties">
			<entry key="build.revision.number" type="int" operation="+" value="1" pattern="00" />
		</propertyfile>
		<property file="version.properties" prefix="new" />
		<propertyfile file="version.properties" comment="Version properties">
			<!-- build number and revision number should be increased separately -->
			<entry key="build.number" operation="=" value="${new.build.major.number}.${new.build.minor.number}.${new.build.revision.number}" />
		</propertyfile>
	</target>

	<target name="jrun" description="Run the built jar file." depends="dist">
		<java jar="${build.jar.dir}/ryhm1.jar" fork="true" />
	</target>

	<!--In order to run your application in console you need to create a new target runc:-->
	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.ryhm1.Intro" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>

	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}" />

	</target>

	<!-- Git commit ant target -->
	<target name="git_commit" description="It's Showtime: commit and push!">
		<exec executable="git">
			<arg value="add" />
			<arg value="-A" />
		</exec>
		<input message="Your comments about this commit please: " addproperty="commitMessage" />
		<echo message="Doing some commiting, the message is ${commitMessage}" />
		<exec executable="git">
			<arg value="commit" />
			<arg value="-m ${commitMessage}" />
		</exec>
		<input message="Username:" addproperty="username" />
		<input message="Password:" addproperty="password" />
		<exec executable="git">
			<arg value="push" />
			<arg value="https://${username}:${password}@github.com/liivur/Ryhm1.git" />
		</exec>
	</target>

	<!-- Git tag ant target -->
	<target name="git_tag" description="Making a tag in github cannot be more simple than that">
		<input message="Please give a name for the tag: " addproperty="nameMyTag" />
		<input message="Your message please: " addproperty="tagMessage" />
		<input message="Username" addproperty="username" />
		<input message="Password" addproperty="password" />
		<echo message="New tag is being made with name ${nameMyTag} and the delivered message: ${tagMessage}" />
		<exec executable="git">
			<arg value="tag" />
			<arg value="-a" />
			<arg value="${nameMyTag}" />
			<arg value="-m" />
			<arg value="${tagMessage}" />
		</exec>
		<exec executable="git">
			<arg value="push" />
			<arg value="https://${username}:${password}@github.com/liivur/Ryhm1.git" />
			<arg value="--tags" />
		</exec>
	</target>
	<target name="dbmanager" description="Start the HSQLDB manager">
        <java
            classname="org.hsqldb.util.DatabaseManagerSwing"
            classpathref="run.classpath"
            fork="yes"
        >
            <arg line="--user sa --url ${db.url}" />
        </java>
    </target>

    <target name="startdb" description="Start the HSQLDB with the default params">
        <java
            classname="org.hsqldb.Server"
            classpathref="run.classpath"
            fork="yes"
        >
            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
        </java>
	</target>
</project>
